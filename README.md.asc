-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

LAIR Development Manifest
=========================
This repository should help me keep my projects folder better organized. It's
an android-style manifest I'm going to do releases of my game with. Some other
stuff too.


Initialization
- --------------
Getting an initial copy of all the packages is easiest with repo, but can also
be done with git and make alone. If you use repo, you can defer the
configuration step and can use all repo's wierd advanced stuff if that's what
you're into or used to. I was used to it so I learned to serve it up.

        repo init -u github.com:cmotc/lair-manifest.git
        repo sync --force-sync

or with git and make:

        git clone https://github.com/cmotc/lair-manifest.git

and complete the configuration set before moving on.

Configuration
- -------------

Unless you just want to keep your changes local and only pull in updates from
my source, open config.mk and change GH_NAME to match your account and KEY to
a gpg identity you want to use to sign the packages. When you do that, you can:

        make clone

to get copies of all the repositories and

        make init

which will set up a remote for your fork under the name "github" and under the
name "upstream" for by branch. Then you can run

        make update

to pull in updates from my source. It will use repo if repo is initialized or
fall back to using git if repo fails in any way. To completely bypass repo, do

        make pull

instead of make update. If you need to get a clean copy, you can do

        make force-update

to get the original sources and re-initialize the repositories. When you've made
some changes, doing,

        make push

will push all changes, along with a messge(export DEV_MESSAGE="commit message"
before calling make push) to push local changes to your own branch.

Building all the Packages
- -------------------------

Doing

        make full

will rebuild all available packages. Before you distribute anything, you should
make sure that the people who download those files can be assured of their
integrity. To make signatures for all the files using $KEY, run

        make sign

If you have a website and a repository for your branch, then you can make a
release by doing

        make release

This will rebuild all the packages, re-generate the web site and the repository,
and push the updates to the remote branches. Support for forks in places other
than github will probably come soon because I'm tired and sorting folders calms
me.
-----BEGIN PGP SIGNATURE-----

iQEzBAEBCAAdFiEEwM7uKXtf5F/2EKrG8F+F+kRsBCsFAlk3a3MACgkQ8F+F+kRs
BCtqqQgAi9xgbHFyziwC0c0FEhCEoOFqJyIKp/m1hDdGH22iJ9BdBNoA906PH1Hl
Jo8T1Qe5cEZ1DTd5yYCr6obJcOzMAEhAiaPNkcqFBvzJLld6meHps2kD7ccquisH
xBdGN26+TbyU/Gdh0JSyPkJ8f8PH8h32p+AqDcHmC9LzOUVUNU4WzIv55jfQ7qeC
YvHV0Bal6nSxgkLk5/CBLqfoxdgEZkDAt0gJ32chMQi6jJ/NSQfFMvjtfwp8TKzS
pv8VP/pEJfiqnwMfGdRwct17GEjDU2XqC9Qz//RmRBkRNu6vq8EY3UvdpXPlbd2B
j+4KTJL2ituludp9dILwvI6qAIENeg==
=hJ6/
-----END PGP SIGNATURE-----
